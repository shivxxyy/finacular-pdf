{"version":3,"sources":["components/PDF.js","App.js","reportWebVitals.js","index.js"],"names":["ref","React","createRef","PDF","state","month","portfolio","sector","amount","submitted","onChange","input","e","setState","target","value","submitButton","alert","preventDefault","style","Table","striped","bordered","hover","this","className","type","background","border","borderBottom","targetRef","filename","toPdf","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8107d6c.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactToPdf from 'react-to-pdf'\r\nimport {Table} from 'react-bootstrap'\r\nimport { Component } from 'react'\r\nconst ref =React.createRef()\r\nclass PDF extends Component {\r\n    state={\r\n        month:' ',\r\n        portfolio:' ',\r\n        sector:'',\r\n        amount:'',\r\n        submitted:false\r\n      }\r\n    \r\n      onChange= input=> e =>{\r\n        this.setState({\r\n          [input]: e.target.value\r\n        })}\r\n    \r\n      submitButton=(e)=>{\r\n        if(!this.state.portfolio || !this.state.amount){\r\n          alert('All fields are required')\r\n          e.preventDefault()\r\n        }\r\n        else{this.setState({\r\n          submitted:true\r\n        })}\r\n      }\r\n render(){\r\n    return (\r\n        \r\n        <div>\r\n        {/*<div className='Post' ref={ref}>\r\n            <h1>{props.portfolio}</h1>\r\n            <p>{props.amount}</p>\r\n        </div>\r\n        <ReactToPdf targetRef={ref} filename='post.pdf'>\r\n            {({toPdf})=><button onClick={toPdf}>Download</button>}\r\n        </ReactToPdf>*/}\r\n        <div>\r\n    \r\n    <div style={{}} ref={ref}><div>\r\n        <h4>Networth Values</h4>\r\n <Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>Month</th>\r\n      <th>Portfolio Value(In INR)</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>Dec-19</td>\r\n      <td><input onChange={this.onChange('portfolio')} className=\"mb-3\" type='number' style={{ background: 'transparent', border: 'none',borderBottom: '1px solid black'}}></input></td>\r\n      \r\n    </tr>\r\n    <tr>\r\n      <td>Jan-20</td>\r\n      <td><input onChange={this.onChange('portfolio')}  className=\"mb-3\" type='number' style={{ background: 'transparent', border: 'none',borderBottom: '1px solid black'}}></input></td>\r\n     \r\n    </tr>\r\n    <tr>\r\n      <td>Feb-20</td>\r\n      <td><input onChange={this.onChange('portfolio')}  className=\"mb-3\" type='number' style={{ background: 'transparent', border: 'none',borderBottom: '1px solid black'}}></input></td>\r\n     \r\n    </tr>\r\n    <tr>\r\n      <td>Mar-20</td>\r\n      <td><input onChange={this.onChange('portfolio')}  className=\"mb-3\" type='number' style={{ background: 'transparent', border: 'none',borderBottom: '1px solid black'}}></input></td>\r\n      \r\n    </tr>\r\n    <tr>\r\n      <td>Apr-20</td>\r\n      <td><input onChange={this.onChange('portfolio')}  className=\"mb-3\" type='number' style={{ background: 'transparent', border: 'none',borderBottom: '1px solid black'}}></input></td>\r\n      \r\n    </tr>\r\n    <tr>\r\n      <td>May-20</td>\r\n      <td><input onChange={this.onChange('portfolio')}  className=\"mb-3\" type='number' style={{ background: 'transparent', border: 'none',borderBottom: '1px solid black'}}></input></td>\r\n     \r\n    </tr>\r\n    <tr>\r\n      <td>Jun-20</td>\r\n      <td><input onChange={this.onChange('portfolio')}  className=\"mb-3\" type='number' style={{ background: 'transparent', border: 'none',borderBottom: '1px solid black'}}></input></td>\r\n      \r\n    </tr>\r\n    <tr>\r\n      <td>Jul-20</td>\r\n      <td><input onChange={this.onChange('portfolio')}  className=\"mb-3\" type='number' style={{ background: 'transparent', border: 'none',borderBottom: '1px solid black'}}></input></td>\r\n      \r\n    </tr>\r\n    <tr>\r\n      <td>Aug-20</td>\r\n      <td><input onChange={this.onChange('portfolio')}  className=\"mb-3\" type='number' style={{ background: 'transparent', border: 'none',borderBottom: '1px solid black'}}></input></td>\r\n      \r\n    </tr>\r\n    <tr>\r\n      <td>Sep-20</td>\r\n      <td><input onChange={this.onChange('portfolio')}  className=\"mb-3\" type='number' style={{ background: 'transparent', border: 'none',borderBottom: '1px solid black'}}></input></td>\r\n      \r\n    </tr>\r\n    <tr>\r\n      <td>Oct-20</td>\r\n      <td><input onChange={this.onChange('portfolio')}  className=\"mb-3\" type='number' style={{ background: 'transparent', border: 'none',borderBottom: '1px solid black'}}></input></td>\r\n     \r\n    </tr>\r\n    <tr>\r\n      <td>Nov-20</td>\r\n      <td><input onChange={this.onChange('portfolio')}  className=\"mb-3\" type='number' style={{ background: 'transparent', border: 'none',borderBottom: '1px solid black'}}></input></td>\r\n      \r\n    </tr>\r\n    <tr>\r\n      <td>Dec-20</td>\r\n      <td><input onChange={this.onChange('portfolio')}  className=\"mb-3\" type='number' style={{ background: 'transparent', border: 'none',borderBottom: '1px solid black'}}></input></td>\r\n     \r\n    </tr>\r\n  </tbody>\r\n</Table> \r\n\r\n<h4>Sector Allocation</h4>\r\n<Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>Sector</th>\r\n      <th>Amount in INR</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>FMCG</td>\r\n      <td><input onChange={this.onChange('amount')} className=\"mb-3\" type='number' style={{ background: 'transparent', border: 'none',borderBottom: '1px solid black'}}></input></td>\r\n      \r\n    </tr>\r\n    <tr>\r\n      <td>BFSI</td>\r\n      <td><input onChange={this.onChange('amount')} className=\"mb-3\" type='number' style={{ background: 'transparent', border: 'none',borderBottom: '1px solid black'}}></input></td>\r\n     \r\n    </tr>\r\n    <tr>\r\n      <td>Auto</td>\r\n      <td><input onChange={this.onChange('amount')} className=\"mb-3\" type='number' style={{ background: 'transparent', border: 'none',borderBottom: '1px solid black'}}></input></td>\r\n      \r\n    </tr>\r\n    <tr>\r\n      <td>Pharma</td>\r\n      <td><input onChange={this.onChange('amount')} className=\"mb-3\" type='number' style={{ background: 'transparent', border: 'none',borderBottom: '1px solid black'}}></input></td>\r\n      \r\n    </tr>\r\n    <tr>\r\n      <td>Infra</td>\r\n      <td><input onChange={this.onChange('amount')} className=\"mb-3\" type='number' style={{ background: 'transparent', border: 'none',borderBottom: '1px solid black'}}></input></td>\r\n      \r\n    </tr>\r\n    </tbody>\r\n    </Table>\r\n        </div></div>\r\n        <ReactToPdf targetRef={ref} filename=\"div-blue.pdf\">\r\n        {({toPdf}) => (\r\n            <button onClick={toPdf} className=\"btn btn-outline-primary\" >Generate pdf</button>\r\n        )}\r\n    </ReactToPdf>\r\n</div>\r\n\r\n        </div>\r\n    )\r\n        }\r\n}\r\n\r\nexport default PDF","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PDF from './components/PDF'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <PDF/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}